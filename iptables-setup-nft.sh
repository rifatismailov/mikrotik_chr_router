#!/bin/bash
set -euo pipefail

# üßæ –ü–∞—Ä–∞–º–µ—Ç—Ä–∏ –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—ó
SRC_IP="192.168.88.200"      # IP —Ö–æ—Å—Ç–∞, –Ω–∞ —è–∫–∏–π –∑–≤–µ—Ä—Ç–∞—é—Ç—å—Å—è –∑ LAN
DST_IP="172.21.0.2"          # IP MikroTik —É Docker bridge
LAN_SUBNET="192.168.88.0/24" # LAN –ø—ñ–¥–º–µ—Ä–µ–∂–∞

# –ü–æ—Ä—Ç–∏ –¥–ª—è –ø—Ä–æ–±—Ä–æ—Å—É
TCP_PORTS=(8291)           # WinBox
UDP_PORTS=(51820 1701)     # WireGuard, L2TP

echo "üîé –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞, —â–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—Ç—å—Å—è iptables-nft‚Ä¶"
ALT="$(sudo update-alternatives --display iptables | sed -n 's/.*–≤–∫–∞–∑—É—î –Ω–∞ \(.*\)$/\1/p' | tr -d ' ')"
if [[ "$ALT" != "/usr/sbin/iptables-nft" ]]; then
  echo "‚ùå –ó–∞—Ä–∞–∑ –∞–∫—Ç–∏–≤–Ω–∏–π $ALT. –ü–µ—Ä–µ–º–∫–Ω–∏ –Ω–∞ nft —ñ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏ Docker:"
  echo "    sudo update-alternatives --set iptables /usr/sbin/iptables-nft"
  echo "    sudo update-alternatives --set ip6tables /usr/sbin/ip6tables-nft"
  echo "    sudo systemctl restart docker"
  exit 1
fi

echo "üß† –£–≤—ñ–º–∫–Ω–µ–Ω–Ω—è —Ñ–æ—Ä–≤–∞—Ä–¥–∏–Ω–≥—É —Ç–∞ br_netfilter‚Ä¶"
sudo modprobe br_netfilter || true
sudo sysctl -w net.bridge.bridge-nf-call-iptables=1 >/dev/null
sudo sysctl -w net.ipv4.ip_forward=1 >/dev/null

# –§–æ—Ä–º—É—î–º–æ –º–Ω–æ–∂–∏–Ω–∏ –ø–æ—Ä—Ç—ñ–≤ —É —Å–∏–Ω—Ç–∞–∫—Å–∏—Å—ñ nft
TCP_SET="$(IFS=, ; echo "{${TCP_PORTS[*]}}")"
UDP_SET="$(IFS=, ; echo "{${UDP_PORTS[*]}}")"

# –°—Ç–≤–æ—Ä—é—î–º–æ/–ø–µ—Ä–µ—Å–æ–∑–¥–∞—î–º–æ –Ω–∞—à—ñ —Ç–∞–±–ª–∏—Ü—ñ, —â–æ–± –Ω–µ —á—ñ–ø–∞—Ç–∏ Docker-–ª–∞–Ω—Ü—é–≥–∏
# - NAT: –æ–∫—Ä–µ–º–∞ —Ç–∞–±–ª–∏—Ü—è 'ip mikrotik_nat' –∑ –ø—Ä—ñ–æ—Ä–∏—Ç–µ—Ç–æ–º -101 (–ø–µ—Ä–µ–¥ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∏–º dstnat -100)
# - FILTER: –æ–∫—Ä–µ–º–∞ —Ç–∞–±–ª–∏—Ü—è 'inet mikrotik_fw' –¥–ª—è –¥–æ–∑–≤–æ–ª—ñ–≤ INPUT/FORWARD
NFT_SCRIPT=$(cat <<EOF
flush table ip mikrotik_nat
flush table inet mikrotik_fw

table ip mikrotik_nat {
  chain prerouting {
    type nat hook prerouting priority -101; policy accept;
    # DNAT –Ω–∞ MikroTik –¥–ª—è TCP –ø–æ—Ä—Ç—ñ–≤
    tcp dport $TCP_SET ip daddr $SRC_IP dnat to $DST_IP
    # DNAT –Ω–∞ MikroTik –¥–ª—è UDP –ø–æ—Ä—Ç—ñ–≤
    udp dport $UDP_SET ip daddr $SRC_IP dnat to $DST_IP
  }
  chain postrouting {
    type nat hook postrouting priority 100; policy accept;
    # –ú–∞—Å–∫–∞—Ä–∞–¥–∏–Ω–≥ –¥–ª—è –∑–≤–æ—Ä–æ—Ç–Ω–æ–≥–æ —Ç—Ä–∞—Ñ—ñ–∫—É –¥–æ MikroTik
    ip daddr $DST_IP masquerade
    # –ú–∞—Å–∫–∞—Ä–∞–¥–∏–Ω–≥ –¥–ª—è Docker-–ø—ñ–¥–º–µ—Ä–µ–∂—ñ (—â–æ–± –ø–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è –ø—Ä–æ–π—à–ª–æ —á–µ—Ä–µ–∑ —Ö–æ—Å—Ç)
    ip daddr 172.21.0.0/16 masquerade
  }
}

table inet mikrotik_fw {
  chain input {
    type filter hook input priority 0; policy accept;
    # –î–æ–∑–≤–æ–ª—è—î–º–æ –¥–æ—Å—Ç—É–ø –∑ LAN –¥–æ –ø–æ—Ä—Ç—ñ–≤ –Ω–∞ —Ö–æ—Å—Ç—ñ
    ip saddr $LAN_SUBNET tcp dport $TCP_SET accept
    ip saddr $LAN_SUBNET udp dport $UDP_SET accept
  }
  chain forward {
    type filter hook forward priority 0; policy accept;
    # –î–æ–∑–≤–æ–ª—è—î–º–æ —Ñ–æ—Ä–≤–∞—Ä–¥–∏–Ω–≥ —Ç—Ä–∞—Ñ—ñ–∫—É –¥–æ MikroTik –Ω–∞ –ø–æ—Ç—Ä—ñ–±–Ω—ñ –ø–æ—Ä—Ç–∏
    ip daddr $DST_IP tcp dport $TCP_SET accept
    ip daddr $DST_IP udp dport $UDP_SET accept
  }
}
EOF
)

echo "üß± –ó–∞—Å—Ç–æ—Å–æ–≤—É—é nft-–ø—Ä–∞–≤–∏–ª–∞‚Ä¶"
echo "$NFT_SCRIPT" | sudo nft -f -

echo "‚úÖ –ì–æ—Ç–æ–≤–æ."
echo "–ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –ø—Ä–∞–≤–∏–ª:"
echo "  sudo nft list table ip mikrotik_nat"
echo "  sudo nft list table inet mikrotik_fw"
echo
echo "–ü–æ—Ä–∞–¥–∏:"
echo " - –Ø–∫—â–æ —Ç–∏ –∑–º—ñ–Ω—é–≤–∞—Ç–∏–º–µ—à –ø–æ—Ä—Ç–∏ –∞–±–æ IP, –ø—Ä–æ—Å—Ç–æ –∑–Ω–æ–≤—É –∑–∞–ø—É—Å—Ç–∏ —Å–∫—Ä–∏–ø—Ç."
echo " - –î–ª—è –≤–∏–¥–∞–ª–µ–Ω–Ω—è –ø—Ä–∞–≤–∏–ª: 'sudo nft delete table ip mikrotik_nat; sudo nft delete table inet mikrotik_fw'."
